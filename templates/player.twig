{% extends "base.twig" %}

{% block content %}

<div class="container">

    <div class="videoplayer">

        <video id="video" src="{{ base_path() }}/vods/{{ config.channel_folders ? vodclass.streamer_name ~ "/" : "" }}{{ vodclass.basename }}.mp4" width="1280"></video>
		<div id="videoplayer-controls">
			<button class="button" onclick="vp_play();">Play</button>
			<button class="button" onclick="vp_pause();">Pause</button>
		</div>
		<div id="timeline"><div id="timeline-cut"></div><div id="timeline-playhead"></div></div>

        <div class="videoplayer-chapters">

            {% for chapter in vodclass.chapters %}

                <div title="{{ chapter.title }} | \\n{{ chapter.game_name }}" class="videoplayer-chapter" style="width: {{ chapter.width }}%" onclick="scrub({{ chapter.offset }}, {{ chapter.duration }});">
                    <div class="videoplayer-chapter-title">{{ chapter.title }}</div>
                    <div class="videoplayer-chapter-game">{{ chapter.game_name }}</div>
                </div>

            {% endfor %}

        </div>

        <div class="videoplayer-cut">
			<form method="post" action="{{ base_path() }}/cut">

				<input type="hidden" name="vod" value="{{ vodclass.basename }}" />

				<div>
					<button type="button" class="button" onclick="cut_video('in')">Mark in</button>
					<input class="input" name="start" id="value_in" placeholder="In timestamp">
				</div>

				<div>
					<button type="button" class="button" onclick="cut_video('out')">Mark out</button>
					<input class="input" name="end" id="value_out" placeholder="Out timestamp">
				</div>

				<div>
					<input class="input" type="text" name="name" placeholder="Name (optional)">
				</div>

				<div>
					<button type="submit" class="button" onclick="submit_cut();">Submit cut</button>
				</div>
				
			</form>
			<!--
			<form method="post" action="{{ url_for('api_vod_export', { 'vod': vodclass.basename }) }}">
				<select name="destination">
					<option>YouTube</option>
				</select>
				<button type="submit" class="button" onclick="submit_cut();">Upload</button>
			</form>
			-->
        </div>

    </div>

</div>

<script type="text/javascript">

	let start_offset = {{ start_offset }};
	let game_offset = {{ vodclass.game_offset }};
	
	let time_in = "";
	let time_out = "";

	let videoplayer = document.getElementById('video');
	let timeline = document.getElementById("timeline");
	let timeline_playhead = document.getElementById("timeline-playhead");
	let timeline_cut = document.getElementById("timeline-cut");

	if( start_offset > 0 ){
		document.getElementById('video').currentTime = start_offset;
	}

	function cut_video( t ){

		let cmd = document.getElementById('cut_video_cmd');

		let current_time = document.getElementById('video').currentTime;

		if(t == 'in') time_in = Math.round(current_time);
		if(t == 'out') time_out = Math.round(current_time);
		
		document.getElementById('value_in').value = time_in;
		document.getElementById('value_out').value = time_out;

		timeline_cut.style.left = ( ( time_in / video.duration ) * 100 ) + "%";
		
		timeline_cut.style.right = ( 100 - ( time_out / video.duration ) * 100 ) + "%";
		// timeline_cut.style.width = ( ( time_out / video.duration ) * 100 ) + "%";

	}

	function vp_play(){
		videoplayer.play();
	}

	function vp_pause(){
		videoplayer.pause();
	}

	/*
	function submit_cut(){
		if( time_in && time_out ){
			location.href = '/cut?vod={{ vodclass.basename }}&start=' + time_in + '&end=' + time_out;
		}
	}
	*/

	timeline.addEventListener('click', (event) => {
		// let perc = video.duration / event.clientX ;
		let duration = video.duration;
		let rect = timeline.getBoundingClientRect();
		let percent = ( event.clientX - rect.left ) / timeline.clientWidth;
		let seconds = Math.round(duration * percent);
		video.currentTime = seconds;
	});

	setInterval(() => {
		if(!video.currentTime) return;
		let percent = ( video.currentTime / video.duration ) * 100;
		timeline_playhead.style.left = percent + "%";
	}, 250);

	function scrub(s, d){
		document.getElementById("video").currentTime = s;

		time_in = Math.round(s-game_offset);
		time_out = Math.round(s+d-game_offset);

		document.getElementById('value_in').value = time_in;
		document.getElementById('value_out').value = time_out;
	}

</script>

{% endblock %}
