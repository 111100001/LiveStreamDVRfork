{"version":3,"sources":["webpack:///./src/views/Editor.vue","webpack:///./src/views/Editor.vue?a696","webpack:///./src/views/Editor.vue?62bb"],"names":["class","id","type","name","value","ref","src","vodData","webpath","basename","updateVideoTime","width","play","pause","seek","style","timelineCutStyle","timelinePlayheadStyle","chapters","chapter","key","title","game_name","scrub","offset","duration","timeIn","Math","round","currentVideoTime","placeholder","timeOut","cutName","submit","data","created","this","fetchData","props","vod","String","methods","fetch","then","response","json","console","log","$refs","player","tIn","tOut","gameOffset","game_offset","event","rect","timeline","getBoundingClientRect","percent","clientX","left","clientWidth","seconds","currentTime","target","FormData","append","toString","method","body","message","alert","computed","right","dur","render"],"mappings":"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","file":"js/editor.4f892346.js","sourcesContent":["<template>\r\n    \r\n    <div class=\"videoplayer\">\r\n\r\n        <video id=\"video\" ref=\"player\" :src=\"vodData.webpath + '/' + vodData.basename + '.mp4'\" @timeupdate=\"updateVideoTime\" width=\"1280\"></video>\r\n\t\t<div id=\"videoplayer-controls\">\r\n\t\t\t<button class=\"button\" @click=\"play\">Play</button>\r\n\t\t\t<button class=\"button\" @click=\"pause\">Pause</button>\r\n\t\t</div>\r\n\t\t<div id=\"timeline\" ref=\"timeline\" @click=\"seek\">\r\n            <div id=\"timeline-cut\" v-bind:style=\"timelineCutStyle\"></div>\r\n            <div id=\"timeline-playhead\" v-bind:style=\"timelinePlayheadStyle\"></div>\r\n        </div>\r\n\r\n        <!--{{ currentVideoTime }} / {{ $refs.player ? $refs.player.currentTime : 'init' }} / {{ $refs.player ? $refs.player.duration : 'init' }}-->\r\n\r\n        <div class=\"videoplayer-chapters\">\r\n\r\n            <div v-for=\"chapter in vodData.chapters\" :key=\"chapter\" :title=\"chapter.title + ' | \\\\n' + chapter.game_name\" class=\"videoplayer-chapter\" :style=\"{ width: chapter.width +'%' }\" @click=\"scrub(chapter.offset, chapter.duration)\">\r\n                <div class=\"videoplayer-chapter-title\">{{ chapter.title }}</div>\r\n                <div class=\"videoplayer-chapter-game\">{{ chapter.game_name }}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"videoplayer-cut\">\r\n\r\n            <input type=\"hidden\" name=\"vod\" value=\"{{ vodData.basename }}\" />\r\n\r\n            <div>\r\n                <button type=\"button\" class=\"button\" @click=\"timeIn = Math.round(currentVideoTime)\">Mark in</button>\r\n                <input class=\"input\" name=\"start\" v-model=\"timeIn\" placeholder=\"In timestamp\">\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" class=\"button\" @click=\"timeOut = Math.round(currentVideoTime)\">Mark out</button>\r\n                <input class=\"input\" name=\"end\" v-model=\"timeOut\" placeholder=\"Out timestamp\">\r\n            </div>\r\n\r\n            <div>\r\n                <input class=\"input\" type=\"text\" name=\"name\" v-model=\"cutName\" placeholder=\"Name (optional)\">\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" class=\"button\" @click=\"submit\">Submit cut</button>\r\n            </div>\r\n\t\t\t\t\r\n\t\t\t<!--\r\n\t\t\t<form method=\"post\" action=\"{{ url_for('api_vod_export', { 'vod': vodclass.basename }) }}\">\r\n\t\t\t\t<select name=\"destination\">\r\n\t\t\t\t\t<option>YouTube</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<button type=\"submit\" class=\"button\" onclick=\"submit_cut();\">Upload</button>\r\n\t\t\t</form>\r\n\t\t\t-->\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { defineComponent, onMounted, ref } from \"vue\";\r\nimport type { ApiVod } from \"@/twitchautomator.d\";\r\n\r\nexport default defineComponent({\r\n    name: \"Editor\",\r\n    data(){\r\n        return {\r\n            vodData: {} as ApiVod,\r\n            timeIn: 0,\r\n            timeOut: 0,\r\n            currentVideoTime: 0,\r\n            cutName: ''\r\n            // videoDuration: 0,\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n    props: {\r\n        vod: String,\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            // this.vodData = [];\r\n            fetch(`/api/v0/vod/${this.vod}/`)\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.vodData = json.data;\r\n                console.log(json);\r\n            });\r\n        },\r\n        play(){\r\n            console.log(\"play\", this.$refs.player);\r\n            (this.$refs.player as HTMLVideoElement).play();\r\n        },\r\n        pause(){\r\n            console.log(\"pause\", this.$refs.player);\r\n            (this.$refs.player as HTMLVideoElement).pause();\r\n        },\r\n        scrub(tIn : number, tOut : number){\r\n            const gameOffset = this.vodData.game_offset;\r\n            this.timeIn = Math.round(tIn-gameOffset);\r\n\t\t    this.timeOut = Math.round(tIn+tOut-gameOffset);\r\n            // this.$forceUpdate();\r\n        },\r\n        seek(event : MouseEvent){\r\n            console.log(\"seek\", event);\r\n            const duration = (this.$refs.player as HTMLVideoElement).duration;\r\n            const rect = (this.$refs.timeline as HTMLDivElement).getBoundingClientRect();\r\n            const percent = ( event.clientX - rect.left ) / (this.$refs.timeline as HTMLDivElement).clientWidth;\r\n            const seconds = Math.round(duration * percent);\r\n            (this.$refs.player as HTMLVideoElement).currentTime = seconds;\r\n\r\n            // this.$forceUpdate();\r\n        },\r\n        updateVideoTime( event : MediaStreamEvent){\r\n            // console.log(v);\r\n            this.currentVideoTime = (event.target as HTMLVideoElement).currentTime;\r\n        },\r\n        submit(){\r\n            console.log(\"submit\", this.timeIn, this.timeOut, this.cutName);\r\n\r\n            const data = new FormData();\r\n            data.append('time_in', this.timeIn.toString());\r\n            data.append('time_out', this.timeOut.toString());\r\n            data.append('name', this.cutName);\r\n\r\n            fetch(`/api/v0/vod/${this.vod}/cut`, {\r\n                method: 'POST',\r\n                body: data\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                if(json.message) alert(json.message);\r\n                console.log(json);\r\n            });\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        timelineCutStyle() : Record<string, any> {\r\n            if(!this.currentVideoTime) return { left: '0%', right: '100%' };\r\n            const dur = (this.$refs.player as HTMLVideoElement).duration;\r\n            return {\r\n                left: ( ( this.timeIn / dur ) * 100 ) + \"%\",\r\n                right: ( 100 - ( this.timeOut / dur ) * 100 ) + \"%\",\r\n            };\r\n        },\r\n        timelinePlayheadStyle() : Record<string, any> {\r\n            if(!this.currentVideoTime) return { left: '0%' };\r\n\t\t    const percent = ( this.currentVideoTime / (this.$refs.player as HTMLVideoElement).duration ) * 100;\r\n\t\t    return {\r\n                left: percent + \"%\"\r\n            };\r\n        }\r\n    }\r\n});\r\n</script>\r\n","\r\n\r\nimport { defineComponent, onMounted, ref } from \"vue\";\r\nimport type { ApiVod } from \"@/twitchautomator.d\";\r\n\r\nexport default defineComponent({\r\n    name: \"Editor\",\r\n    data(){\r\n        return {\r\n            vodData: {} as ApiVod,\r\n            timeIn: 0,\r\n            timeOut: 0,\r\n            currentVideoTime: 0,\r\n            cutName: ''\r\n            // videoDuration: 0,\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n    props: {\r\n        vod: String,\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            // this.vodData = [];\r\n            fetch(`/api/v0/vod/${this.vod}/`)\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.vodData = json.data;\r\n                console.log(json);\r\n            });\r\n        },\r\n        play(){\r\n            console.log(\"play\", this.$refs.player);\r\n            (this.$refs.player as HTMLVideoElement).play();\r\n        },\r\n        pause(){\r\n            console.log(\"pause\", this.$refs.player);\r\n            (this.$refs.player as HTMLVideoElement).pause();\r\n        },\r\n        scrub(tIn : number, tOut : number){\r\n            const gameOffset = this.vodData.game_offset;\r\n            this.timeIn = Math.round(tIn-gameOffset);\r\n\t\t    this.timeOut = Math.round(tIn+tOut-gameOffset);\r\n            // this.$forceUpdate();\r\n        },\r\n        seek(event : MouseEvent){\r\n            console.log(\"seek\", event);\r\n            const duration = (this.$refs.player as HTMLVideoElement).duration;\r\n            const rect = (this.$refs.timeline as HTMLDivElement).getBoundingClientRect();\r\n            const percent = ( event.clientX - rect.left ) / (this.$refs.timeline as HTMLDivElement).clientWidth;\r\n            const seconds = Math.round(duration * percent);\r\n            (this.$refs.player as HTMLVideoElement).currentTime = seconds;\r\n\r\n            // this.$forceUpdate();\r\n        },\r\n        updateVideoTime( event : MediaStreamEvent){\r\n            // console.log(v);\r\n            this.currentVideoTime = (event.target as HTMLVideoElement).currentTime;\r\n        },\r\n        submit(){\r\n            console.log(\"submit\", this.timeIn, this.timeOut, this.cutName);\r\n\r\n            const data = new FormData();\r\n            data.append('time_in', this.timeIn.toString());\r\n            data.append('time_out', this.timeOut.toString());\r\n            data.append('name', this.cutName);\r\n\r\n            fetch(`/api/v0/vod/${this.vod}/cut`, {\r\n                method: 'POST',\r\n                body: data\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                if(json.message) alert(json.message);\r\n                console.log(json);\r\n            });\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        timelineCutStyle() : Record<string, any> {\r\n            if(!this.currentVideoTime) return { left: '0%', right: '100%' };\r\n            const dur = (this.$refs.player as HTMLVideoElement).duration;\r\n            return {\r\n                left: ( ( this.timeIn / dur ) * 100 ) + \"%\",\r\n                right: ( 100 - ( this.timeOut / dur ) * 100 ) + \"%\",\r\n            };\r\n        },\r\n        timelinePlayheadStyle() : Record<string, any> {\r\n            if(!this.currentVideoTime) return { left: '0%' };\r\n\t\t    const percent = ( this.currentVideoTime / (this.$refs.player as HTMLVideoElement).duration ) * 100;\r\n\t\t    return {\r\n                left: percent + \"%\"\r\n            };\r\n        }\r\n    }\r\n});\r\n","import { render } from \"./Editor.vue?vue&type=template&id=d6102a7a\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}